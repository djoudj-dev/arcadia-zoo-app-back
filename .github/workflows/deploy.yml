name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # Use '18.x' to get the latest patch version automatically

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to VPS
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          # Prepare environment variables
          VPS_USER="ubuntu"
          VPS_DIR="/var/www/nedellec-julien.fr/backend"
          SSH_PORT="49999"

          echo "Connecting to VPS to deploy the application..."

          # Use rsync to transfer files, ensuring SSH connection
          rsync -avz -e "ssh -p $SSH_PORT" ./package.json $VPS_USER@$VPS_HOST:$VPS_DIR/
          rsync -avz -e "ssh -p $SSH_PORT" ./dist/ $VPS_USER@$VPS_HOST:$VPS_DIR/dist/

          # Connect to VPS and execute commands
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT $VPS_USER@$VPS_HOST << 'EOF'
            echo "Setting up environment variables on VPS..."
            cat > $VPS_DIR/.env <<EOL
            NODE_ENV=production
            DB_HOST=$DB_HOST
            DB_PORT=$DB_PORT
            DB_USER=$DB_USER
            DB_PASSWORD=$DB_PASSWORD
            DB_NAME=$DB_NAME
            JWT_SECRET=$JWT_SECRET
            EOL

            cd $VPS_DIR
            echo "Checking and installing dependencies..."
            npm ci

            echo "Restarting the app with PM2..."
            pm2 stop arcadia-zoo-app-back || true
            pm2 start dist/main.js --name arcadia-zoo-app-back --update-env

            echo "Current PM2 status:"
            pm2 status arcadia-zoo-app-back
          EOF
