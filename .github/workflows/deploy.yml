name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to VPS
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          # Connexion SSH et exécution des commandes sur le VPS
          ssh -o StrictHostKeyChecking=no -p 49999 ubuntu@${{ secrets.VPS_HOST }} << EOF
            cd /var/www/nedellec-julien.fr/backend/

            # Vérifiez si le fichier package.json existe, sinon, récupérez-le depuis le dépôt
            if [ ! -f package.json ]; then
              echo "Le fichier package.json est manquant. Il sera récupéré depuis le dépôt..."
              rsync -av -e "ssh -p 49999" ./package.json ubuntu@${{ secrets.VPS_HOST }}:/var/www/nedellec-julien.fr/backend/
            fi

            # Vérifiez si le répertoire dist existe, sinon, créez-le
            mkdir -p dist/arcadia-zoo-app-back

            # Copier tous les fichiers du répertoire dist/arcadia-zoo-app-back vers le serveur
            echo "Copie des fichiers du build sur le serveur..."
            rsync -av --delete ./dist/ ubuntu@${{ secrets.VPS_HOST }}:/var/www/nedellec-julien.fr/backend/dist/

            # Vérification de la présence des fichiers transférés
            echo "Liste des fichiers dans le répertoire backend :"
            ls -la /var/www/nedellec-julien.fr/backend/dist/

            # Si le fichier package.json existe, installer les dépendances
            echo "Installation des dépendances..."
            npm install

            # Créer ou mettre à jour le fichier .env avec les variables d’environnement
            echo "Création du fichier .env sur le serveur..."
            cat > /var/www/nedellec-julien.fr/backend/.env << EOL
            NODE_ENV=production
            DB_HOST=${DB_HOST}
            DB_PORT=${DB_PORT}
            DB_USER=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=${DB_NAME}
            JWT_SECRET=${JWT_SECRET}
            EOL

            # Si les fichiers manquent, reconstruisez sur le serveur
            if [ ! -f /var/www/nedellec-julien.fr/backend/dist/main.js ]; then
              echo "Le fichier main.js est manquant. Reconstruction du projet..."
              npm run build
            fi

            # Redémarrer l’application avec PM2
            echo "Redémarrage de l'application avec PM2..."
            pm2 stop arcadia-zoo-app-back || true
            pm2 start /var/www/nedellec-julien.fr/backend/dist/main.js --name arcadia-zoo-app-back --update-env

            # Vérification de l'état de l'application
            pm2 status arcadia-zoo-app-back
          EOF
