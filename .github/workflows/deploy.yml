name: Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          POSTGRESQL_URL: ${{ secrets.POSTGRESQL_URL }}
          POSTGRESQL_ARCADIA_URL: ${{ secrets.POSTGRESQL_ARCADIA_URL }}
        run: |
          ssh -o StrictHostKeyChecking=no -p 49999 ubuntu@${{ secrets.VPS_HOST }} << EOF
            cd /var/www/nedellec-julien.fr/backend/
            
            # Créer le fichier .env avec toutes les variables
            cat > .env << EOL
            NODE_ENV=production
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            POSTGRESQL_URL=${{ secrets.POSTGRESQL_URL }}
            POSTGRESQL_ARCADIA_URL=${{ secrets.POSTGRESQL_ARCADIA_URL }}
            EOL
            
            # Redémarrer les conteneurs
            sudo docker compose down
            sudo docker compose up -d --build
          EOF
