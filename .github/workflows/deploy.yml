name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to VPS
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          # Connect to VPS with SSH and execute commands
          ssh -o StrictHostKeyChecking=no -p 49999 ubuntu@${{ secrets.VPS_HOST }} << EOF

            if [ ! -f /var/www/nedellec-julien.fr/backend/package.json ]; then
              echo "Synchronizing package.json..."
              rsync -avz --delete -e "ssh -p 49999" ./package.json ubuntu@${{ secrets.VPS_HOST }}:/var/www/nedellec-julien.fr/backend/
            fi

            echo "Setting up environment variables..."
            cat > /var/www/nedellec-julien.fr/backend/.env <<EOL
            NODE_ENV=production
            DB_HOST=${DB_HOST}
            DB_PORT=${DB_PORT}
            DB_USER=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=${DB_NAME}
            JWT_SECRET=${JWT_SECRET}
            EOL

            cd /var/www/nedellec-julien.fr/backend/
            echo "Installing dependencies..."
            npm ci

            echo "Checking for built files..."
            ls -la /var/www/nedellec-julien.fr/backend/dist/

            if [ ! -f /var/www/nedellec-julien.fr/backend/dist/main.js ]; then
              echo "Building project since compiled files are missing..."
              npm run build
            fi

            echo "Restarting the app with PM2..."
            pm2 stop arcadia-zoo-app-back || true
            pm2 start /var/www/nedellec-julien.fr/backend/dist/main.js --name arcadia-zoo-app-back --update-env

            echo "Current PM2 status:"
            pm2 status arcadia-zoo-app-back
          EOF
