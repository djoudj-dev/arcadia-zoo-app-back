name: Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to VPS
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no -p 49999 ubuntu@${{ secrets.VPS_HOST }} << EOF
            # Aller dans le dossier backend sur le VPS
            cd /var/www/nedellec-julien.fr/backend/

            # Créer le répertoire dist/arcadia-zoo-app-back si nécessaire
            mkdir -p dist/arcadia-zoo-app-back

            # Copier les fichiers du build du projet depuis le répertoire local dist
            rsync -a --delete /home/runner/work/arcadia-zoo-app-back/arcadia-zoo-app-back/ /var/www/nedellec-julien.fr/backend/dist/arcadia-zoo-app-back/

            # Créer le fichier .env avec les variables d’environnement
            cat > .env << EOL
            NODE_ENV=production
            DB_HOST=${DB_HOST}
            DB_PORT=${DB_PORT}
            DB_USER=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=${DB_NAME}
            JWT_SECRET=${JWT_SECRET}
            EOL

            # Redémarrer l’application avec PM2 ou en arrière-plan
            pm2 stop arcadia-zoo-app-back || true
            pm2 start dist/arcadia-zoo-app-back/main.js --name arcadia-zoo-app-back
          EOF
